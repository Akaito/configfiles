"source $VIMRUNTIME/vimrc_example.vim
"source ./vim81-defaults.vim


"
" Plug plugin section
" From https://github.com/junegunn/vim-plug
" Run `:PlugInstall` inside Vim to install these on any new system.
" PlugUpdate: to install or update.
" PlugClean: Remove unlisted plugins.
" PlugUpgrade: Update Plug.
"
"
call plug#begin('~/.vim/plugged')
"Plug 'https://github.com/vim-airline/vim-airline.git'
"Plug 'https://github.com/dawikur/base16-vim-airline-themes.git', { 'do': './after.sh' }
" :ALEDetail to get the full pane.
Plug 'https://github.com/w0rp/ale'
" Put a .editorconfig in a project to get per-project Vim settings.
Plug 'https://github.com/editorconfig/editorconfig-vim'
" fzf fuzzy finder
" Use with :Files command. `map ; :Files<CR>` is a recommended mapping.
"Plug 'https://github.com/junegunn/fzf.vim'
Plug 'https://github.com/airblade/vim-gitgutter'
" :NERDTreeToggle
Plug 'https://github.com/scrooloose/nerdtree'
call plug#end()

" Follow-up plugin setup.
" fzf
"nmap <Leader>f :Files<CR>


"
" Normal vim settings
"

filetype plugin indent on

set backspace=indent,start,eol

set number
set relativenumber
"set cursorline  # too expensive in some cases

" jk as escape key
inoremap jk <esc>

" Visual autocomplete for command menu
"set wildmenu
" Ignore compiled files
"set wildignore=*.o,*~,*.pyc

" Ignore case when searching, smartly
set ignorecase
set smartcase

set hlsearch
set incsearch

" Show as much of the last line of text as possible ('@@@' represents
" truncation), and show unprintable chars as hex <xx> instead of ^C and ~C.
set display=lastline,uhex

" Allow putting the cursor on the very first and last lines and columns.
set scrolloff=0
set sidescrolloff=0

" Don't redraw while executing macros
"set lazyredraw

" Show matching brackets when text indicator is over them
set showmatch
" How many tenths of a second to blink when matching brackets
set mat=2

"""
""" Colors and Fonts
"""

"syntax on
syntax enable

set background=dark
colorscheme badwolf
"colorscheme base16-monokai

"""
""" Tabs
"""

set expandtab
"set smarttab " tab inserts tabs for indents, space otherwise
set shiftwidth=4
set tabstop=4
set softtabstop=4

" Auto and smart indent
"set copyindent
"set autoindent  " trying out cindent instead for a bit.
"set smartindent  " trying out cindent instead for a bit.
set cindent

" Don't auto-continue comments quite so much ('ro' not present).
" :h 'formatoptions'
" :h fo-table
set formatoptions=crqnlj
" Fix our formatoptions after filetype plugins mess with them.
autocmd BufNewFile,BufRead * setlocal formatoptions=crqnlj

" Do not recognize octal numbers for Ctrl-A and Ctrl-X, most users find it
" confusing.
set nrformats-=octal

" For Win32 GUI: remove 't' flag from 'guioptions': no tearoff menu entries.
if has('win32')
  set guioptions-=t
endif

" Switch syntax highlighting on when the terminal has colors or when using the
" GUI (which always has colors).
if &t_Co > 2 || has("gui_running")
  " Revert with ":syntax off".
  syntax on

  " I like highlighting strings inside C comments.
  " Revert with ":unlet c_comment_strings".
  let c_comment_strings=1
endif


"""
""" Syntastic plugin
""" bundle/syntastic
""" :help syntastic
"""

"set statusline+=%#warningmsg#
"set statusline+=%{SyntasticStatuslineFlag()}
"set statusline+=%*

"let g:syntastic_always_populate_loc_list = 1
"let g:syntastic_auto_loc_list            = 1
"let g:syntastic_check_on_open            = 1
"let g:syntastic_check_on_wq              = 0

" jump to next/previous errors (may not be Syntastic-specific?)
"nnoremap <leader>n :lnext<CR>
"nnoremap <leader>p :lprevious<CR>


"""
""" vim-gitgutter
""" https://github.com/airblade/vim-gitgutter
"""

" Hotkeys and commands
" You can jump between hunks with [c and ]c.
" Both of those take a preceding count.
" You can preview, stage, and undo hunks with <leader>hp, <leader>hs, and
" <leader>hu respectively.
" You cannot unstage a staged hunk.
"
" :GitGutterToggle

" Cut update time down from default 4000 (4 seconds) to 100 ms.
"set updatetime=100


"""
""" Some stuff from https://github.com/jonhoo/configs/
"""

" Keep undo info around in a special dir.  So you can undo after closing and
" re-opening a file.
set undodir=~/.vimdid
set undofile

